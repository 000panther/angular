import { global } from 'angular2/src/facade/lang';
// This is here only so that after TS transpilation the file is not empty.
// TODO(rado): find a better way to fix this, or remove if likely culprit
// https://github.com/systemjs/systemjs/issues/487 gets closed.
var __ignore_me = global;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9yb3V0ZXIvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FDTyxFQUFDLE1BQU0sRUFBQyxNQUFNLDBCQUEwQjtBQUUvQywwRUFBMEU7QUFDMUUseUVBQXlFO0FBQ3pFLCtEQUErRDtBQUMvRCxJQUFJLFdBQVcsR0FBRyxNQUFNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudEluc3RydWN0aW9ufSBmcm9tICcuL2luc3RydWN0aW9uJztcbmltcG9ydCB7Z2xvYmFsfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuXG4vLyBUaGlzIGlzIGhlcmUgb25seSBzbyB0aGF0IGFmdGVyIFRTIHRyYW5zcGlsYXRpb24gdGhlIGZpbGUgaXMgbm90IGVtcHR5LlxuLy8gVE9ETyhyYWRvKTogZmluZCBhIGJldHRlciB3YXkgdG8gZml4IHRoaXMsIG9yIHJlbW92ZSBpZiBsaWtlbHkgY3VscHJpdFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3N5c3RlbWpzL3N5c3RlbWpzL2lzc3Vlcy80ODcgZ2V0cyBjbG9zZWQuXG52YXIgX19pZ25vcmVfbWUgPSBnbG9iYWw7XG5cblxuLyoqXG4gKiBEZWZpbmVzIHJvdXRlIGxpZmVjeWNsZSBtZXRob2QgYG9uQWN0aXZhdGVgLCB3aGljaCBpcyBjYWxsZWQgYnkgdGhlIHJvdXRlciBhdCB0aGUgZW5kIG9mIGFcbiAqIHN1Y2Nlc3NmdWwgcm91dGUgbmF2aWdhdGlvbi5cbiAqXG4gKiBGb3IgYSBzaW5nbGUgY29tcG9uZW50J3MgbmF2aWdhdGlvbiwgb25seSBvbmUgb2YgZWl0aGVyIHtAbGluayBPbkFjdGl2YXRlfSBvciB7QGxpbmsgT25SZXVzZX1cbiAqIHdpbGwgYmUgY2FsbGVkIGRlcGVuZGluZyBvbiB0aGUgcmVzdWx0IG9mIHtAbGluayBDYW5SZXVzZX0uXG4gKlxuICogVGhlIGBvbkFjdGl2YXRlYCBob29rIGlzIGNhbGxlZCB3aXRoIHR3byB7QGxpbmsgQ29tcG9uZW50SW5zdHJ1Y3Rpb259cyBhcyBwYXJhbWV0ZXJzLCB0aGUgZmlyc3RcbiAqIHJlcHJlc2VudGluZyB0aGUgY3VycmVudCByb3V0ZSBiZWluZyBuYXZpZ2F0ZWQgdG8sIGFuZCB0aGUgc2Vjb25kIHBhcmFtZXRlciByZXByZXNlbnRpbmcgdGhlXG4gKiBwcmV2aW91cyByb3V0ZSBvciBgbnVsbGAuXG4gKlxuICogSWYgYG9uQWN0aXZhdGVgIHJldHVybnMgYSBwcm9taXNlLCB0aGUgcm91dGUgY2hhbmdlIHdpbGwgd2FpdCB1bnRpbCB0aGUgcHJvbWlzZSBzZXR0bGVzIHRvXG4gKiBpbnN0YW50aWF0ZSBhbmQgYWN0aXZhdGUgY2hpbGQgY29tcG9uZW50cy5cbiAqXG4gKiAjIyMgRXhhbXBsZVxuICoge0BleGFtcGxlIHJvdXRlci90cy9vbl9hY3RpdmF0ZS9vbl9hY3RpdmF0ZV9leGFtcGxlLnRzIHJlZ2lvbj0nb25BY3RpdmF0ZSd9XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgT25BY3RpdmF0ZSB7XG4gIG9uQWN0aXZhdGUobmV4dEluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbiwgcHJldkluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbik6IGFueTtcbn1cblxuLyoqXG4gKiBEZWZpbmVzIHJvdXRlIGxpZmVjeWNsZSBtZXRob2QgYG9uUmV1c2VgLCB3aGljaCBpcyBjYWxsZWQgYnkgdGhlIHJvdXRlciBhdCB0aGUgZW5kIG9mIGFcbiAqIHN1Y2Nlc3NmdWwgcm91dGUgbmF2aWdhdGlvbiB3aGVuIHtAbGluayBDYW5SZXVzZX0gaXMgaW1wbGVtZW50ZWQgYW5kIHJldHVybnMgb3IgcmVzb2x2ZXMgdG8gdHJ1ZS5cbiAqXG4gKiBGb3IgYSBzaW5nbGUgY29tcG9uZW50J3MgbmF2aWdhdGlvbiwgb25seSBvbmUgb2YgZWl0aGVyIHtAbGluayBPbkFjdGl2YXRlfSBvciB7QGxpbmsgT25SZXVzZX1cbiAqIHdpbGwgYmUgY2FsbGVkLCBkZXBlbmRpbmcgb24gdGhlIHJlc3VsdCBvZiB7QGxpbmsgQ2FuUmV1c2V9LlxuICpcbiAqIFRoZSBgb25SZXVzZWAgaG9vayBpcyBjYWxsZWQgd2l0aCB0d28ge0BsaW5rIENvbXBvbmVudEluc3RydWN0aW9ufXMgYXMgcGFyYW1ldGVycywgdGhlIGZpcnN0XG4gKiByZXByZXNlbnRpbmcgdGhlIGN1cnJlbnQgcm91dGUgYmVpbmcgbmF2aWdhdGVkIHRvLCBhbmQgdGhlIHNlY29uZCBwYXJhbWV0ZXIgcmVwcmVzZW50aW5nIHRoZVxuICogcHJldmlvdXMgcm91dGUgb3IgYG51bGxgLlxuICpcbiAqICMjIyBFeGFtcGxlXG4gKiB7QGV4YW1wbGUgcm91dGVyL3RzL3JldXNlL3JldXNlX2V4YW1wbGUudHMgcmVnaW9uPSdyZXVzZUNtcCd9XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgT25SZXVzZSB7XG4gIG9uUmV1c2UobmV4dEluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbiwgcHJldkluc3RydWN0aW9uOiBDb21wb25lbnRJbnN0cnVjdGlvbik6IGFueTtcbn1cblxuLyoqXG4gKiBEZWZpbmVzIHJvdXRlIGxpZmVjeWNsZSBtZXRob2QgYG9uRGVhY3RpdmF0ZWAsIHdoaWNoIGlzIGNhbGxlZCBieSB0aGUgcm91dGVyIGJlZm9yZSBkZXN0cm95aW5nXG4gKiBhIGNvbXBvbmVudCBhcyBwYXJ0IG9mIGEgcm91dGUgY2hhbmdlLlxuICpcbiAqIFRoZSBgb25EZWFjdGl2YXRlYCBob29rIGlzIGNhbGxlZCB3aXRoIHR3byB7QGxpbmsgQ29tcG9uZW50SW5zdHJ1Y3Rpb259cyBhcyBwYXJhbWV0ZXJzLCB0aGUgZmlyc3RcbiAqIHJlcHJlc2VudGluZyB0aGUgY3VycmVudCByb3V0ZSBiZWluZyBuYXZpZ2F0ZWQgdG8sIGFuZCB0aGUgc2Vjb25kIHBhcmFtZXRlciByZXByZXNlbnRpbmcgdGhlXG4gKiBwcmV2aW91cyByb3V0ZS5cbiAqXG4gKiBJZiBgb25EZWFjdGl2YXRlYCByZXR1cm5zIGEgcHJvbWlzZSwgdGhlIHJvdXRlIGNoYW5nZSB3aWxsIHdhaXQgdW50aWwgdGhlIHByb21pc2Ugc2V0dGxlcy5cbiAqXG4gKiAjIyMgRXhhbXBsZVxuICoge0BleGFtcGxlIHJvdXRlci90cy9vbl9kZWFjdGl2YXRlL29uX2RlYWN0aXZhdGVfZXhhbXBsZS50cyByZWdpb249J29uRGVhY3RpdmF0ZSd9XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgT25EZWFjdGl2YXRlIHtcbiAgb25EZWFjdGl2YXRlKG5leHRJbnN0cnVjdGlvbjogQ29tcG9uZW50SW5zdHJ1Y3Rpb24sIHByZXZJbnN0cnVjdGlvbjogQ29tcG9uZW50SW5zdHJ1Y3Rpb24pOiBhbnk7XG59XG5cbi8qKlxuICogRGVmaW5lcyByb3V0ZSBsaWZlY3ljbGUgbWV0aG9kIGBjYW5SZXVzZWAsIHdoaWNoIGlzIGNhbGxlZCBieSB0aGUgcm91dGVyIHRvIGRldGVybWluZSB3aGV0aGVyIGFcbiAqIGNvbXBvbmVudCBzaG91bGQgYmUgcmV1c2VkIGFjcm9zcyByb3V0ZXMsIG9yIHdoZXRoZXIgdG8gZGVzdHJveSBhbmQgaW5zdGFudGlhdGUgYSBuZXcgY29tcG9uZW50LlxuICpcbiAqIFRoZSBgY2FuUmV1c2VgIGhvb2sgaXMgY2FsbGVkIHdpdGggdHdvIHtAbGluayBDb21wb25lbnRJbnN0cnVjdGlvbn1zIGFzIHBhcmFtZXRlcnMsIHRoZSBmaXJzdFxuICogcmVwcmVzZW50aW5nIHRoZSBjdXJyZW50IHJvdXRlIGJlaW5nIG5hdmlnYXRlZCB0bywgYW5kIHRoZSBzZWNvbmQgcGFyYW1ldGVyIHJlcHJlc2VudGluZyB0aGVcbiAqIHByZXZpb3VzIHJvdXRlLlxuICpcbiAqIElmIGBjYW5SZXVzZWAgcmV0dXJucyBvciByZXNvbHZlcyB0byBgdHJ1ZWAsIHRoZSBjb21wb25lbnQgaW5zdGFuY2Ugd2lsbCBiZSByZXVzZWQgYW5kIHRoZVxuICoge0BsaW5rIE9uRGVhY3RpdmF0ZX0gaG9vayB3aWxsIGJlIHJ1bi4gSWYgYGNhblJldXNlYCByZXR1cm5zIG9yIHJlc29sdmVzIHRvIGBmYWxzZWAsIGEgbmV3XG4gKiBjb21wb25lbnQgd2lsbCBiZSBpbnN0YW50aWF0ZWQsIGFuZCB0aGUgZXhpc3RpbmcgY29tcG9uZW50IHdpbGwgYmUgZGVhY3RpdmF0ZWQgYW5kIHJlbW92ZWQgYXNcbiAqIHBhcnQgb2YgdGhlIG5hdmlnYXRpb24uXG4gKlxuICogSWYgYGNhblJldXNlYCB0aHJvd3Mgb3IgcmVqZWN0cywgdGhlIG5hdmlnYXRpb24gd2lsbCBiZSBjYW5jZWxsZWQuXG4gKlxuICogIyMjIEV4YW1wbGVcbiAqIHtAZXhhbXBsZSByb3V0ZXIvdHMvcmV1c2UvcmV1c2VfZXhhbXBsZS50cyByZWdpb249J3JldXNlQ21wJ31cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDYW5SZXVzZSB7XG4gIGNhblJldXNlKG5leHRJbnN0cnVjdGlvbjogQ29tcG9uZW50SW5zdHJ1Y3Rpb24sIHByZXZJbnN0cnVjdGlvbjogQ29tcG9uZW50SW5zdHJ1Y3Rpb24pOiBhbnk7XG59XG5cbi8qKlxuICogRGVmaW5lcyByb3V0ZSBsaWZlY3ljbGUgbWV0aG9kIGBjYW5EZWFjdGl2YXRlYCwgd2hpY2ggaXMgY2FsbGVkIGJ5IHRoZSByb3V0ZXIgdG8gZGV0ZXJtaW5lXG4gKiBpZiBhIGNvbXBvbmVudCBjYW4gYmUgcmVtb3ZlZCBhcyBwYXJ0IG9mIGEgbmF2aWdhdGlvbi5cbiAqXG4gKiBUaGUgYGNhbkRlYWN0aXZhdGVgIGhvb2sgaXMgY2FsbGVkIHdpdGggdHdvIHtAbGluayBDb21wb25lbnRJbnN0cnVjdGlvbn1zIGFzIHBhcmFtZXRlcnMsIHRoZVxuICogZmlyc3QgcmVwcmVzZW50aW5nIHRoZSBjdXJyZW50IHJvdXRlIGJlaW5nIG5hdmlnYXRlZCB0bywgYW5kIHRoZSBzZWNvbmQgcGFyYW1ldGVyXG4gKiByZXByZXNlbnRpbmcgdGhlIHByZXZpb3VzIHJvdXRlLlxuICpcbiAqIElmIGBjYW5EZWFjdGl2YXRlYCByZXR1cm5zIG9yIHJlc29sdmVzIHRvIGBmYWxzZWAsIHRoZSBuYXZpZ2F0aW9uIGlzIGNhbmNlbGxlZC4gSWYgaXQgcmV0dXJucyBvclxuICogcmVzb2x2ZXMgdG8gYHRydWVgLCB0aGVuIHRoZSBuYXZpZ2F0aW9uIGNvbnRpbnVlcywgYW5kIHRoZSBjb21wb25lbnQgd2lsbCBiZSBkZWFjdGl2YXRlZFxuICogKHRoZSB7QGxpbmsgT25EZWFjdGl2YXRlfSBob29rIHdpbGwgYmUgcnVuKSBhbmQgcmVtb3ZlZC5cbiAqXG4gKiBJZiBgY2FuRGVhY3RpdmF0ZWAgdGhyb3dzIG9yIHJlamVjdHMsIHRoZSBuYXZpZ2F0aW9uIGlzIGFsc28gY2FuY2VsbGVkLlxuICpcbiAqICMjIyBFeGFtcGxlXG4gKiB7QGV4YW1wbGUgcm91dGVyL3RzL2Nhbl9kZWFjdGl2YXRlL2Nhbl9kZWFjdGl2YXRlX2V4YW1wbGUudHMgcmVnaW9uPSdjYW5EZWFjdGl2YXRlJ31cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDYW5EZWFjdGl2YXRlIHtcbiAgY2FuRGVhY3RpdmF0ZShuZXh0SW5zdHJ1Y3Rpb246IENvbXBvbmVudEluc3RydWN0aW9uLCBwcmV2SW5zdHJ1Y3Rpb246IENvbXBvbmVudEluc3RydWN0aW9uKTogYW55O1xufVxuIl19